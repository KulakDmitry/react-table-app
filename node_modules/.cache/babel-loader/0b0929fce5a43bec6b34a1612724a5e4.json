{"ast":null,"code":"var _jsxFileName = \"/Users/Admin/Dev/WebstormProjects/react-application/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport CreateInputForm from \"./components/CreateInputForm\";\nimport CreateTable from \"./components/CreateTable\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const initUsers = [\n  //   { id: Math.random(), index: 1, name: \"dima\", age: 20 },\n  //   { id: Math.random(), index: 2, name: \"oleg\", age: 25 },\n  //   { id: Math.random(), index: 3, name: \"max\", age: 22 },\n  //   { id: Math.random(), index: 4, name: \"vlad\", age: 27 },\n  //   { id: Math.random(), index: 5, name: \"vitya\", age: 25 },\n  //   { id: Math.random(), index: 6, name: \"nikita\", age: 42 },\n  //   { id: Math.random(), index: 7, name: \"masha\", age: 53 },\n  //   { id: Math.random(), index: 8, name: \"olya\", age: 42 },\n  //   { id: Math.random(), index: 9, name: \"sasha\", age: 71 },\n  //   { id: Math.random(), index: 10, name: \"lera\", age: 68 },\n  // ];\n  const names = [\"dima\", \"oleg\", \"max\", \"vlad\", \"vitya\", \"nikita\", \"masha\", \"olya\", \"sasha\", \"lera\"];\n\n  const randomNumder = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const getRandomNames = arr => {\n    return Math.floor(Math.random() * arr.length);\n  };\n\n  const createUsersList = count => {\n    let arr = [];\n\n    for (let i = 0; i < count; i++) {\n      arr.push({\n        id: Math.random(),\n        index: i + 1,\n        name: names[getRandomNames(names)],\n        age: randomNumder(18, 70)\n      });\n    }\n\n    return arr;\n  };\n\n  console.log(createUsersList(10));\n  const [userList, setUserList] = useState(initUsers);\n\n  const createUser = newUser => {\n    setUserList([...userList, newUser]);\n  };\n\n  const removeUser = user => {\n    setUserList(userList.filter(users => users.id !== user.id));\n  };\n\n  const sortUsers = value => {\n    setUserList([...userList].sort((a, b) => a[value] < b[value] ? -1 : 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(CreateInputForm, {\n      createUser: createUser,\n      userList: userList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), userList.length !== 0 ? /*#__PURE__*/_jsxDEV(CreateTable, {\n      userList: userList,\n      remove: removeUser,\n      sort: sortUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"50px\"\n      },\n      children: \"The data is empty, please add a new user to create a table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pfiVbjYrBBkNfqCGU2xhsWnlOQQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Admin/Dev/WebstormProjects/react-application/src/App.js"],"names":["CreateInputForm","CreateTable","useState","App","names","randomNumder","min","max","Math","floor","random","getRandomNames","arr","length","createUsersList","count","i","push","id","index","name","age","console","log","userList","setUserList","initUsers","createUser","newUser","removeUser","user","filter","users","sortUsers","value","sort","a","b","margin"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport CreateInputForm from \"./components/CreateInputForm\";\nimport CreateTable from \"./components/CreateTable\";\nimport { useState } from \"react\";\n\nfunction App() {\n  // const initUsers = [\n  //   { id: Math.random(), index: 1, name: \"dima\", age: 20 },\n  //   { id: Math.random(), index: 2, name: \"oleg\", age: 25 },\n  //   { id: Math.random(), index: 3, name: \"max\", age: 22 },\n  //   { id: Math.random(), index: 4, name: \"vlad\", age: 27 },\n  //   { id: Math.random(), index: 5, name: \"vitya\", age: 25 },\n  //   { id: Math.random(), index: 6, name: \"nikita\", age: 42 },\n  //   { id: Math.random(), index: 7, name: \"masha\", age: 53 },\n  //   { id: Math.random(), index: 8, name: \"olya\", age: 42 },\n  //   { id: Math.random(), index: 9, name: \"sasha\", age: 71 },\n  //   { id: Math.random(), index: 10, name: \"lera\", age: 68 },\n  // ];\n\n  const names = [\n    \"dima\",\n    \"oleg\",\n    \"max\",\n    \"vlad\",\n    \"vitya\",\n    \"nikita\",\n    \"masha\",\n    \"olya\",\n    \"sasha\",\n    \"lera\",\n  ];\n\n  const randomNumder = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const getRandomNames = (arr) => {\n    return Math.floor(Math.random() * arr.length);\n  };\n\n  const createUsersList = (count) => {\n    let arr = [];\n    for (let i = 0; i < count; i++) {\n      arr.push({\n        id: Math.random(),\n        index: i + 1,\n        name: names[getRandomNames(names)],\n        age: randomNumder(18, 70),\n      });\n    }\n    return arr;\n  };\n\n  console.log(createUsersList(10));\n\n  const [userList, setUserList] = useState(initUsers);\n\n  const createUser = (newUser) => {\n    setUserList([...userList, newUser]);\n  };\n  const removeUser = (user) => {\n    setUserList(userList.filter((users) => users.id !== user.id));\n  };\n\n  const sortUsers = (value) => {\n    setUserList([...userList].sort((a, b) => (a[value] < b[value] ? -1 : 1)));\n  };\n\n  return (\n    <div className=\"App\">\n      <CreateInputForm createUser={createUser} userList={userList} />\n      {userList.length !== 0 ? (\n        <CreateTable userList={userList} remove={removeUser} sort={sortUsers} />\n      ) : (\n        <div style={{ margin: \"50px\" }}>\n          The data is empty, please add a new user to create a table\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}