{"ast":null,"code":"var _jsxFileName = \"/Users/Admin/Dev/WebstormProjects/react-application/src/components/CreateTableForm.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"./UI/Button\";\nimport ModalWindow from \"./UI/ModalWindow\";\nimport CreateInputForm from \"./CreateInputForm\";\nimport FilterUsers from \"./FilterUsers\";\nimport CreateTable from \"./CreateTable\";\nimport { createUsersList } from \"./createUsersList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateTableForm = _ref => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {} = _ref;\n\n  const requestSort = key => {\n    let direction = \"ascending\";\n\n    if (filter && filter.key === key && filter.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n\n    setFilter({ ...filter,\n      key: key,\n      direction: direction\n    });\n  };\n\n  const searchAndSort = useMemo(_s(() => {\n    _s();\n\n    const [userList, setUserList] = useState(createUsersList(20));\n    const [filter, setFilter] = useState({\n      direction: \"\",\n      key: null,\n      sort: \"\",\n      search: \"\"\n    });\n    const [modal, setModal] = useState(false);\n    const sortedItems = useMemo(() => {\n      let sortableItems = [...userList];\n\n      if (filter.key !== null) {\n        sortableItems.sort((a, b) => {\n          if (a[filter.key] < b[filter.key]) {\n            return filter.direction === \"ascending\" ? -1 : 1;\n          }\n\n          if (a[filter.key] > b[filter.key]) {\n            return filter.direction === \"ascending\" ? 1 : -1;\n          }\n\n          return 0;\n        });\n      }\n\n      return sortableItems;\n    }, [userList, filter]);\n    return sortedItems.filter(users => users.name.toLowerCase().includes(filter.search));\n  }, \"gJredbjixP7jSJHQTmOgawt5qf0=\"), [filter.search, sortedItems]);\n\n  const createUser = newUser => {\n    setUserList([...userList, newUser]);\n    setModal(false);\n  };\n\n  const removeUser = user => {\n    setUserList(userList.filter(users => users.id !== user.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setModal(true),\n      children: \"Create new user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalWindow, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(CreateInputForm, {\n        createUser: createUser,\n        userList: userList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterUsers, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTable, {\n      userList: searchAndSort,\n      remove: removeUser,\n      requestSort: requestSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(CreateTableForm, \"+t0mfOF01cf5//8ee/YaXwSeano=\");\n\n_c = CreateTableForm;\nexport default CreateTableForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTableForm\");","map":{"version":3,"sources":["/Users/Admin/Dev/WebstormProjects/react-application/src/components/CreateTableForm.jsx"],"names":["React","Button","ModalWindow","CreateInputForm","FilterUsers","CreateTable","createUsersList","CreateTableForm","requestSort","key","direction","filter","setFilter","searchAndSort","useMemo","userList","setUserList","useState","sort","search","modal","setModal","sortedItems","sortableItems","a","b","users","name","toLowerCase","includes","createUser","newUser","removeUser","user","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"./UI/Button\";\nimport ModalWindow from \"./UI/ModalWindow\";\nimport CreateInputForm from \"./CreateInputForm\";\nimport FilterUsers from \"./FilterUsers\";\nimport CreateTable from \"./CreateTable\";\nimport { createUsersList } from \"./createUsersList\";\n\nconst CreateTableForm = ({}) => {\n  const requestSort = (key) => {\n    let direction = \"ascending\";\n    if (filter && filter.key === key && filter.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n    setFilter({ ...filter, key: key, direction: direction });\n  };\n\n  const searchAndSort = useMemo(() => {\n    const [userList, setUserList] = useState(createUsersList(20));\n\n    const [filter, setFilter] = useState({\n      direction: \"\",\n      key: null,\n      sort: \"\",\n      search: \"\",\n    });\n\n    const [modal, setModal] = useState(false);\n\n    const sortedItems = useMemo(() => {\n      let sortableItems = [...userList];\n      if (filter.key !== null) {\n        sortableItems.sort((a, b) => {\n          if (a[filter.key] < b[filter.key]) {\n            return filter.direction === \"ascending\" ? -1 : 1;\n          }\n          if (a[filter.key] > b[filter.key]) {\n            return filter.direction === \"ascending\" ? 1 : -1;\n          }\n          return 0;\n        });\n      }\n      return sortableItems;\n    }, [userList, filter]);\n\n    return sortedItems.filter((users) =>\n      users.name.toLowerCase().includes(filter.search)\n    );\n  }, [filter.search, sortedItems]);\n\n  const createUser = (newUser) => {\n    setUserList([...userList, newUser]);\n    setModal(false);\n  };\n  const removeUser = (user) => {\n    setUserList(userList.filter((users) => users.id !== user.id));\n  };\n  return (\n    <div>\n      <Button onClick={() => setModal(true)}>Create new user</Button>\n      <ModalWindow visible={modal} setVisible={setModal}>\n        <CreateInputForm createUser={createUser} userList={userList} />\n      </ModalWindow>\n\n      <FilterUsers filter={filter} setFilter={setFilter} />\n      <CreateTable\n        userList={searchAndSort}\n        remove={removeUser}\n        requestSort={requestSort}\n      />\n    </div>\n  );\n};\n\nexport default CreateTableForm;\n"]},"metadata":{},"sourceType":"module"}