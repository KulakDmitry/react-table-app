{"ast":null,"code":"var _jsxFileName = \"/Users/Admin/Dev/WebstormProjects/react-application/src/components/CreateTable.jsx\";\nimport Table from \"./UI/Table/Table\";\nimport ButtonTableHead from \"./UI/Button/ButtonTableHead\";\nimport React from \"react\";\nimport PagesList from \"./PagesList\";\nimport Button from \"./UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateTable = _ref => {\n  let {\n    userList,\n    remove,\n    currentPage,\n    setCurrentPage,\n    totalPage,\n    filter,\n    setFilter\n  } = _ref;\n\n  if (!userList.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"50px\"\n      },\n      children: \"Nothing found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  const requestSort = key => {\n    let direction = \"ascending\";\n\n    if (filter && filter.key === key && filter.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n\n    setFilter({ ...filter,\n      key: key,\n      direction: direction\n    });\n  };\n\n  const renderList = userList.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: user.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: user.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          cursor: \"pointer\",\n          margin: 0,\n          padding: \"3px\",\n          border: \"1px solid grey\"\n        },\n        onClick: () => remove(user),\n        children: \"del\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, user.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n        style: {\n          fontSize: \"30px\",\n          marginTop: \"30px\"\n        },\n        children: \"Table of users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(ButtonTableHead, {\n              onClick: () => requestSort(\"id\"),\n              children: [\"Number\", filter.direction === \"descending\" ? \"123\" : \"321\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(ButtonTableHead, {\n              onClick: () => requestSort(\"name\"),\n              children: [\"Name\", filter.direction === \"descending\" ? \"123\" : \"321\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: 2,\n            children: /*#__PURE__*/_jsxDEV(ButtonTableHead, {\n              onClick: () => requestSort(\"email\"),\n              children: [\"Email\", filter.direction === \"descending\" ? \"123\" : \"321\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PagesList, {\n      currentPage: currentPage,\n      setCurrentPage: setCurrentPage,\n      totalPage: totalPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = CreateTable;\nexport default CreateTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTable\");","map":{"version":3,"sources":["/Users/Admin/Dev/WebstormProjects/react-application/src/components/CreateTable.jsx"],"names":["Table","ButtonTableHead","React","PagesList","Button","CreateTable","userList","remove","currentPage","setCurrentPage","totalPage","filter","setFilter","length","margin","requestSort","key","direction","renderList","map","user","id","name","email","cursor","padding","border","fontSize","marginTop"],"mappings":"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","sourcesContent":["import Table from \"./UI/Table/Table\";\nimport ButtonTableHead from \"./UI/Button/ButtonTableHead\";\nimport React from \"react\";\nimport PagesList from \"./PagesList\";\nimport Button from \"./UI/Button/Button\";\n\nconst CreateTable = ({\n  userList,\n  remove,\n  currentPage,\n  setCurrentPage,\n  totalPage,\n  filter,\n  setFilter,\n}) => {\n  if (!userList.length) {\n    return <div style={{ margin: \"50px\" }}>Nothing found</div>;\n  }\n\n  const requestSort = (key) => {\n    let direction = \"ascending\";\n    if (filter && filter.key === key && filter.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n    setFilter({ ...filter, key: key, direction: direction });\n  };\n\n  const renderList = userList.map((user) => (\n    <tr key={user.id}>\n      <td>{user.id}</td>\n      <td>{user.name}</td>\n      <td>{user.email}</td>\n      <td>\n        <Button\n          style={{\n            cursor: \"pointer\",\n            margin: 0,\n            padding: \"3px\",\n            border: \"1px solid grey\",\n          }}\n          onClick={() => remove(user)}\n        >\n          del\n        </Button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <Table>\n        <caption style={{ fontSize: \"30px\", marginTop: \"30px\" }}>\n          Table of users\n        </caption>\n        <thead>\n          <tr>\n            <th>\n              <ButtonTableHead onClick={() => requestSort(\"id\")}>\n                Number\n                {filter.direction === \"descending\" ? \"123\" : \"321\"}\n              </ButtonTableHead>\n            </th>\n            <th>\n              <ButtonTableHead onClick={() => requestSort(\"name\")}>\n                Name\n                {filter.direction === \"descending\" ? \"123\" : \"321\"}\n              </ButtonTableHead>\n            </th>\n            <th colSpan={2}>\n              <ButtonTableHead onClick={() => requestSort(\"email\")}>\n                Email\n                {filter.direction === \"descending\" ? \"123\" : \"321\"}\n              </ButtonTableHead>\n            </th>\n          </tr>\n        </thead>\n        <tbody>{renderList}</tbody>\n      </Table>\n      <PagesList\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n        totalPage={totalPage}\n      />\n    </>\n  );\n};\n\nexport default CreateTable;\n"]},"metadata":{},"sourceType":"module"}