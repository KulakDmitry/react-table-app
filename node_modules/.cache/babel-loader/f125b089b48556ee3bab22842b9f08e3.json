{"ast":null,"code":"var _jsxFileName = \"/Users/Admin/Dev/WebstormProjects/react-application/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport CreateInputForm from \"./components/CreateInputForm\";\nimport CreateTable from \"./components/CreateTable\";\nimport { useMemo, useState } from \"react\";\nimport { createUsersList } from \"./components/createUsersList\";\nimport FilterUsers from \"./components/FilterUsers\";\nimport ModalWindow from \"./components/UI/ModalWindow\";\nimport Button from \"./components/UI/Button\";\nimport { useSortAndSearch } from \"./hooks/useSortAndSearch\";\nimport { usePagination } from \"./hooks/usePagination\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [userList, setUserList] = useState(createUsersList(100));\n  const [filter, setFilter] = useState({\n    direction: \"\",\n    key: null,\n    search: \"\"\n  });\n  const [modal, setModal] = useState(false);\n  const searchAndSort = useSortAndSearch(userList, filter); // const [totalCount, setTotalCount] = useState(userList.length);\n  // const [limit, setLimit] = useState(10);\n  // const [currentPage, setCurrentPage] = useState(1);\n  //\n  // const getPageCount = (totalPage, limit) => {\n  //   return Math.ceil(totalPage / limit);\n  // };\n  //\n  // const totalPages = getPageCount(totalCount, limit);\n  // let pagesArray = usePagination(totalPages, totalCount);\n  //\n  // console.log(pagesArray);\n\n  const apiBase = \"http://localhost:3001\";\n  const Endpoints = {\n    users: \"/users\"\n  };\n\n  const addUser = async user => {\n    const newUserResponse = await fetch(`${apiBase}${Endpoints.users}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify(user)\n    });\n    return await newUserResponse.json();\n  };\n\n  const getUsers = async () => {\n    const response = await axios.get(\"https://jsonplaceholder.typicode.com/todos/1\");\n    console.log(response.data);\n  };\n\n  console.log(getUsers());\n\n  const requestSort = key => {\n    let direction = \"ascending\";\n\n    if (filter && filter.key === key && filter.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n\n    setFilter({ ...filter,\n      key: key,\n      direction: direction\n    });\n  };\n\n  const createUser = newUser => {\n    setUserList([...userList, newUser]);\n    setModal(false);\n  };\n\n  const removeUser = user => {\n    setUserList(userList.filter(users => users.id !== user.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setModal(true),\n      children: \"Create new user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalWindow, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(CreateInputForm, {\n        createUser: createUser,\n        userList: userList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterUsers, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTable, {\n      userList: searchAndSort,\n      remove: removeUser,\n      requestSort: requestSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9oY+c6OWRo01DbrQiDdSup7iFLU=\", false, function () {\n  return [useSortAndSearch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Admin/Dev/WebstormProjects/react-application/src/App.js"],"names":["CreateInputForm","CreateTable","useMemo","useState","createUsersList","FilterUsers","ModalWindow","Button","useSortAndSearch","usePagination","axios","App","userList","setUserList","filter","setFilter","direction","key","search","modal","setModal","searchAndSort","apiBase","Endpoints","users","addUser","user","newUserResponse","fetch","method","headers","body","JSON","stringify","json","getUsers","response","get","console","log","data","requestSort","createUser","newUser","removeUser","id"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport CreateInputForm from \"./components/CreateInputForm\";\nimport CreateTable from \"./components/CreateTable\";\nimport { useMemo, useState } from \"react\";\nimport { createUsersList } from \"./components/createUsersList\";\nimport FilterUsers from \"./components/FilterUsers\";\nimport ModalWindow from \"./components/UI/ModalWindow\";\nimport Button from \"./components/UI/Button\";\nimport { useSortAndSearch } from \"./hooks/useSortAndSearch\";\nimport { usePagination } from \"./hooks/usePagination\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [userList, setUserList] = useState(createUsersList(100));\n  const [filter, setFilter] = useState({\n    direction: \"\",\n    key: null,\n    search: \"\",\n  });\n  const [modal, setModal] = useState(false);\n  const searchAndSort = useSortAndSearch(userList, filter);\n\n  // const [totalCount, setTotalCount] = useState(userList.length);\n  // const [limit, setLimit] = useState(10);\n  // const [currentPage, setCurrentPage] = useState(1);\n  //\n  // const getPageCount = (totalPage, limit) => {\n  //   return Math.ceil(totalPage / limit);\n  // };\n  //\n  // const totalPages = getPageCount(totalCount, limit);\n  // let pagesArray = usePagination(totalPages, totalCount);\n  //\n  // console.log(pagesArray);\n  const apiBase = \"http://localhost:3001\";\n\n  const Endpoints = {\n    users: \"/users\",\n  };\n\n  const addUser = async (user) => {\n    const newUserResponse = await fetch(`${apiBase}${Endpoints.users}`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json;charset=utf-8\" },\n      body: JSON.stringify(user),\n    });\n\n    return await newUserResponse.json();\n  };\n\n  const getUsers = async () => {\n    const response = await axios.get(\n      \"https://jsonplaceholder.typicode.com/todos/1\"\n    );\n    console.log(response.data);\n  };\n\n  console.log(getUsers());\n\n  const requestSort = (key) => {\n    let direction = \"ascending\";\n    if (filter && filter.key === key && filter.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n    setFilter({ ...filter, key: key, direction: direction });\n  };\n\n  const createUser = (newUser) => {\n    setUserList([...userList, newUser]);\n    setModal(false);\n  };\n  const removeUser = (user) => {\n    setUserList(userList.filter((users) => users.id !== user.id));\n  };\n\n  return (\n    <div className=\"App\">\n      <Button onClick={() => setModal(true)}>Create new user</Button>\n      <ModalWindow visible={modal} setVisible={setModal}>\n        <CreateInputForm createUser={createUser} userList={userList} />\n      </ModalWindow>\n      <FilterUsers filter={filter} setFilter={setFilter} />\n      <CreateTable\n        userList={searchAndSort}\n        remove={removeUser}\n        requestSort={requestSort}\n      />\n      {/*{pagesArray.map((page) => (*/}\n      {/*  <Button onClick={() => setCurrentPage(page)} key={page}>*/}\n      {/*    {page}*/}\n      {/*  </Button>*/}\n      {/*))}*/}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}