{"ast":null,"code":"var _jsxFileName = \"/Users/Admin/Dev/WebstormProjects/react-application/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport CreateInputForm from \"./components/CreateInputForm\";\nimport CreateTable from \"./components/CreateTable\";\nimport { useEffect, useState } from \"react\";\nimport { createUsersList } from \"./components/createUsersList\";\nimport FilterUsers from \"./components/FilterUsers\";\nimport ModalWindow from \"./components/UI/ModalWindow\";\nimport Button from \"./components/UI/Button\";\nimport { useSortAndSearch } from \"./hooks/useSortAndSearch\";\nimport { usePagination } from \"./hooks/usePagination\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [userList, setUserList] = useState([]); // const [userList, setUserList] = useState(createUsersList(100));\n\n  const [filter, setFilter] = useState({\n    direction: \"\",\n    key: null,\n    search: \"\"\n  });\n  const [modal, setModal] = useState(false);\n  const searchAndSort = useSortAndSearch(userList, filter);\n  const [totalPage, setTotalPage] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    getData(limit, currentPage);\n  }, [currentPage]);\n\n  async function getData(limit, currentPage) {\n    const response = await axios.get(\"https://jsonplaceholder.typicode.com/comments\", {\n      params: {\n        _limit: limit,\n        _page: currentPage\n      }\n    });\n    setUserList(response.data);\n    const totalCount = response.headers[\"x-total-count\"];\n    setTotalPage(getPageCount(totalCount, limit));\n  }\n\n  const getPageCount = (totalCount, limit) => {\n    return Math.ceil(totalCount / limit);\n  };\n\n  let pagesArray = usePagination(totalPage);\n\n  const requestSort = key => {\n    let direction = \"ascending\";\n\n    if (filter && filter.key === key && filter.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n\n    setFilter({ ...filter,\n      key: key,\n      direction: direction\n    });\n  };\n\n  const createUser = newUser => {\n    setUserList([...userList, newUser]);\n    setModal(false);\n  };\n\n  const removeUser = user => {\n    setUserList(userList.filter(users => users.id !== user.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setModal(true),\n      children: \"Create new user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalWindow, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(CreateInputForm, {\n        createUser: createUser,\n        userList: userList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterUsers, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTable, {\n      userList: searchAndSort,\n      remove: removeUser,\n      requestSort: requestSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), pagesArray.map(page => /*#__PURE__*/_jsxDEV(Button, {\n      className: currentPage === page ? \"page page__current\" : \"page\",\n      onClick: () => setCurrentPage(page),\n      children: page\n    }, page, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sSEeDKSKrE5beT+bmn6iKVQaxIY=\", false, function () {\n  return [useSortAndSearch, usePagination];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Admin/Dev/WebstormProjects/react-application/src/App.js"],"names":["CreateInputForm","CreateTable","useEffect","useState","createUsersList","FilterUsers","ModalWindow","Button","useSortAndSearch","usePagination","axios","App","userList","setUserList","filter","setFilter","direction","key","search","modal","setModal","searchAndSort","totalPage","setTotalPage","limit","setLimit","currentPage","setCurrentPage","getData","response","get","params","_limit","_page","data","totalCount","headers","getPageCount","Math","ceil","pagesArray","requestSort","createUser","newUser","removeUser","user","users","id","map","page"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport CreateInputForm from \"./components/CreateInputForm\";\nimport CreateTable from \"./components/CreateTable\";\nimport { useEffect, useState } from \"react\";\nimport { createUsersList } from \"./components/createUsersList\";\nimport FilterUsers from \"./components/FilterUsers\";\nimport ModalWindow from \"./components/UI/ModalWindow\";\nimport Button from \"./components/UI/Button\";\nimport { useSortAndSearch } from \"./hooks/useSortAndSearch\";\nimport { usePagination } from \"./hooks/usePagination\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [userList, setUserList] = useState([]);\n  // const [userList, setUserList] = useState(createUsersList(100));\n  const [filter, setFilter] = useState({\n    direction: \"\",\n    key: null,\n    search: \"\",\n  });\n  const [modal, setModal] = useState(false);\n  const searchAndSort = useSortAndSearch(userList, filter);\n\n  const [totalPage, setTotalPage] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    getData(limit, currentPage);\n  }, [currentPage]);\n\n  async function getData(limit, currentPage) {\n    const response = await axios.get(\n      \"https://jsonplaceholder.typicode.com/comments\",\n      {\n        params: {\n          _limit: limit,\n          _page: currentPage,\n        },\n      }\n    );\n    setUserList(response.data);\n    const totalCount = response.headers[\"x-total-count\"];\n    setTotalPage(getPageCount(totalCount, limit));\n  }\n\n  const getPageCount = (totalCount, limit) => {\n    return Math.ceil(totalCount / limit);\n  };\n\n  let pagesArray = usePagination(totalPage);\n\n  const requestSort = (key) => {\n    let direction = \"ascending\";\n    if (filter && filter.key === key && filter.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n    setFilter({ ...filter, key: key, direction: direction });\n  };\n\n  const createUser = (newUser) => {\n    setUserList([...userList, newUser]);\n    setModal(false);\n  };\n  const removeUser = (user) => {\n    setUserList(userList.filter((users) => users.id !== user.id));\n  };\n\n  return (\n    <div className=\"App\">\n      <Button onClick={() => setModal(true)}>Create new user</Button>\n      <ModalWindow visible={modal} setVisible={setModal}>\n        <CreateInputForm createUser={createUser} userList={userList} />\n      </ModalWindow>\n      <FilterUsers filter={filter} setFilter={setFilter} />\n      <CreateTable\n        userList={searchAndSort}\n        remove={removeUser}\n        requestSort={requestSort}\n      />\n      <div className={\"page__menu\"}></div>\n      {pagesArray.map((page) => (\n        <Button\n          className={currentPage === page ? \"page page__current\" : \"page\"}\n          onClick={() => setCurrentPage(page)}\n          key={page}\n        >\n          {page}\n        </Button>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}